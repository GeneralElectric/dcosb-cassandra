cql-dispatcher : ${akka.test.calling-thread-dispatcher}

dcosb {

  service-broker {

    aksm {

      stores: ${dcosb.service-broker.aksm.stores} [
        {
          id: "cassandra"
          type: "local"
          uri: "pkcs12:cassandra.p12"
          password: "8BWTL0ie"
        }
      ]

    }
  }

  services: {

    cassandra-test {

      implementation: "io.predix.dcosb.servicemodule.CassandraPXServiceModule"
      service-id: "cassandra"
      service-name: "Cassandra Service"
      description: "Cassandra clusters on-demand!"

      # Configure basic parameters of your DC/OS cluster and the package the service will be installed from
      dcos: ${dcosb.dcos} {

        package-info {
          name: "portworx-cassandra"
          version: "1.0-3.0.10-c2ddff7"
          plan-api-compatible: true

          # service module specific configuration ( not object-mapped )
          # -------------------------------------------------------------

          network-name: "dcos"
          volume-name: "cassandra-volume"
        }

        connection {
          principal: "cassandra-broker"
          # do NOT re-use this key in any environment except dev
          private-key-store-id: "cassandra"
          private-key-alias: "dcos-principal"
          private-key-password: "8BWTL0ie"
          api {
            host: "master.mesos"
            port: 443
          }
        }

      }

      # Configure the Open Service Broker that will manage your DC/OS service instances.
      # Most of these will end up in the catalog response, some will just configure the Service Broker API endpoint
      osb {

        service {

          id: "cassandra"
          name: "Cassandra Service"
          description: "The most awesome service ever made"
          bindable: true
          plan-updateable: false
          tags: ["cassandra", "example"]

          meta-data {

            display-name: "Cassandra Service"
            image-url: ""
            long-description: "Cassandra clusters on-demand"
            provider-display-name: "GE Digital"
            documentation-url: "http://ge.com"
            support-url: "http://ge.com"

          }

          plans: [

            {

              id: "basic"
              name: "Basic"
              description: "A really, really basic plan"

              resources {

                node {

                  cpu: 2,
                  memoryMB: 8192,
                  diskMB: 10240

                }

              }

              meta-data {

                display-name: "Basic Plan"
                bullets: ["last service you'll ever need", "affordable"]
                costs: [

                  {
                    amount: {currency: "USD", value: 12}
                    unit: "MONTHLY"
                  }

                ]

              }

            }

          ]

        }

      }

      # service module specific configuration ( not object-mapped )
      # -------------------------------------------------------------

      user-management {

        superuser-default {
          login: "cassandra"
          password: "cassandra"
        }

        bound-accounts-pk {
          store-id: "cassandra"
          alias: "dcos-principal"
          password: "8BWTL0ie"

        }

        admin-account-pk {
          store-id: "cassandra"
          alias: "dcos-principal"
          password: "8BWTL0ie"

        }

      }

    }

  }



}

